# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path

GET		/                               controllers.Assets.at(path="/public", file="index.html")

GET     /*file               	        controllers.Assets.at(path="/public", file)

# Routes for login
GET		/api/login						controllers.UserController.doLogin()

# Routes for the trip offers                                                          
GET     /api/trip_offer                 controllers.TripOfferController.getTripOffers()
POST    /api/trip_offer                 controllers.TripOfferController.newTripOffer()
GET     /api/trip_offer/:id				controllers.TripOfferController.getTripOffer(id: java.lang.Integer)
PUT     /api/trip_offer/:id             controllers.TripOfferController.updateTripOffer(id: java.lang.Integer)
DELETE	/api/trip_offer/:id				controllers.TripOfferController.deleteTripOffer(id: java.lang.Integer)

# Routes for the trip request
GET     /api/trip_request               controllers.TripRequestController.getTripRequests()
POST    /api/trip_request               controllers.TripRequestController.newTripRequest()
GET     /api/trip_request/:id           controllers.TripRequestController.getTripRequest(id: java.lang.Integer)
PUT     /api/trip_request/:id           controllers.TripRequestController.updateTripRequest(id: java.lang.Integer)
DELETE	/api/trip_request/:id			controllers.TripRequestController.deleteTripRequest(id: java.lang.Integer)

# Routes for the matches
GET     /api/match/:id             	   	controllers.MatchController.getMatch(id: java.lang.Integer)
PUT     /api/match/:id                  controllers.MatchController.updateMatch(id: java.lang.Integer)

# Routers for the trip request
GET     /api/user                       controllers.UserController.getUsers()
POST    /api/user                       controllers.UserController.newUser()
GET     /api/user/:id                   controllers.UserController.getUser(id: java.lang.Integer)
POST    /api/user/:id                   controllers.UserController.updateUser(id: java.lang.Integer)
POST	/api/user/:id/delete			controllers.UserController.deleteUser(id: java.lang.Integer)

DELETE	/api/user/:id					controllers.UserController.deleteUser(id: java.lang.Integer)
PUT     /api/user/:id                   controllers.UserController.updateUser(id: java.lang.Integer)
GET		/api/user/:id/trip_requests		controllers.UserController.getRequestsByUser(id: java.lang.Integer)
GET		/api/user/:id/trip_offers		controllers.UserController.getOffersByUser(id: java.lang.Integer)
GET		/api/user/:id/trip_matches		controllers.UserController.getMatchesByUser(id: java.lang.Integer)

# Routes for the data generator
GET		/api/generate/offers/:number	controllers.GeneratorController.generateTripOffers(number: java.lang.Integer)
GET		/api/generate/requests/:number	controllers.GeneratorController.generateTripRequests(number: java.lang.Integer)
GET		/api/generate/users/:number		controllers.GeneratorController.generateUsers(number: java.lang.Integer)